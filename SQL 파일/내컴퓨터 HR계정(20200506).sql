SELECT *
FROM SCOTT.CONTACTS;

-- 전화번호 변경하기
UPDATE SCOTT.CONTACTS
SET
    CONTACT_TEL = '010-1122-3344'
WHERE
    CONTACT_NAME = '홍길동';
    
-- 이름 변경하기, 객체권한 부족으로 실행 오류
UPDATE SCOTT.CONTACTS
SET
    CONTACT_NAME = '강감찬'
WHERE
    CONTACT_NAME = '김유신';
    
-- SCOTT_CONTACTS에 대한 테이블의 동의어를 생성하기
CREATE SYNONYM CONTACTS FOR SCOTT.CONTACTS;

SELECT *
FROM CONTACTS;

-- 사용자의 모든 테이블 정보 조회
SELECT *
FROM USER_TABLES;

-- 사용자의 모든 뷰 정보 조회
SELECT *
FROM USER_VIEWS;

-- 사용자의 모든 시퀀스 정보 조회
SELECT *
FROM USER_SEQUENCES;

-- 모든 사용자 정보 조회
SELECT *
FROM USER_USERS;

-- 집합 연산자 사용하기
-- 모든 사원의 현재 및 이전에 근무했던 직종을 조회하기
-- 사원별로 한번씩 표시하기
SELECT EMPLOYEE_ID, JOB_ID -- 현재 근무중인 직종 조회하기
FROM EMPLOYEES
UNION
SELECT EMPLOYEE_ID, JOB_ID -- 이전에 근무했던 직종 조회하기
FROM JOB_HISTORY;

-- 모든 사원의 현재 부서아이디와 이전 소속부서 아이디를 조회하기
SELECT EMPLOYEE_ID, DEPARTMENT_ID
FROM EMPLOYEES
UNION ALL
SELECT EMPLOYEE_ID, DEPARTMENT_ID
FROM JOB_HISTORY;

-- 현재 종사하는 직종과 같은 직종에서 종사하고 있는 사원의 아이디와 직종아이디 조회하기
SELECT EMPLOYEE_ID, JOB_ID
FROM EMPLOYEES
INTERSECT
SELECT EMPLOYEE_ID, JOB_ID
FROM JOB_HISTORY;

-- 위의 결과와 같은 조인을 사용한 구문
SELECT A.EMPLOYEE_ID, A.JOB_ID
FROM EMPLOYEES A, JOB_HISTORY B
WHERE A.EMPLOYEE_ID = B.EMPLOYEE_ID
AND A.JOB_ID = B.JOB_ID;

-- 직종이 변경된 적이 없는 사원의 아이디를 조회하기
SELECT EMPLOYEE_ID
FROM EMPLOYEES
MINUS
SELECT EMPLOYEE_ID
FROM JOB_HISTORY;

-- 직종이 변경된 적이 없는 사원의 아이디와 이름을 조회하기
SELECT A.EMPLOYEE_ID, B.FIRST_NAME
FROM (SELECT EMPLOYEE_ID
      FROM EMPLOYEES
      MINUS
      SELECT EMPLOYEE_ID
      FROM JOB_HISTORY) A, EMPLOYEES B
WHERE A.EMPLOYEE_ID = B.EMPLOYEE_ID
ORDER BY 1;

-- 직종이 변경된 적이 없는 사원의 아이디, 이름, 현재 직종, 소속 부서명을 조회하기
SELECT A.EMPLOYEE_ID, B.FIRST_NAME, B.JOB_ID, C.DEPARTMENT_NAME
FROM (SELECT EMPLOYEE_ID
      FROM EMPLOYEES
      MINUS
      SELECT EMPLOYEE_ID
      FROM JOB_HISTORY) A, EMPLOYEES B, DEPARTMENTS C
WHERE A.EMPLOYEE_ID = B.EMPLOYEE_ID
AND B.DEPARTMENT_ID = C.DEPARTMENT_ID;

-- 모든 사원의 현재 및 이전에 근무했던 직종을 조회하기
-- 사원아이디, 직종, 급여를 조회하기
SELECT EMPLOYEE_ID, JOB_ID, SALARY
FROM EMPLOYEES
UNION
SELECT EMPLOYEE_ID, JOB_ID, 0
FROM JOB_HISTORY;